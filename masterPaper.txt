第一章	绪论
1.	研究背景及动机
嵌入式软件是一种针对嵌入式系统进行设计和开发的软件，随着嵌入式系统的应用越来越广泛，嵌入式软件也被广泛使用。目前，在航天领域中，航天器的控制、航天器功能的实现都依托于嵌入式软件，由于航天任务的特殊性和复杂性，嵌入式软件的任何故障都可能对航天任务的成败产生重大影响。因此，航天领域对嵌入式软件的可信性有着极高的要求。中断并发导致的数据访问冲突问题是航天嵌入式软件中的一类重要问题，这类问题是主程序和中断或不同的中断之间对同一数据进行访问，使得数据的一致性被破坏所导致的。它是一种典型的并发缺陷，据中国空间技术研究院软件产品保证中心统计，在航天器总装集成测试（A.I.T.）阶段的检测报告中，约 80%的软件质量问题都与中断数据访问冲突有关。由此可见，中断数据访问冲突问题对航天软件的可信性有着严重影响。虽然近年来，已经有工作去使用静态分析的方法辅助人工来检查嵌入式软件中的中断数据访问冲突问题，并且取得了不错的效果，但是对于中断数据访问冲突中占比较高的多变量原子性违反问题，在目前的工程实践中，仍然缺少对于这种缺陷的自动化检测手段，还是完全依靠人工走查的方式进行检测。而这类缺陷存在较多隐含的变量关联性规约，难以靠人工走查完全识别，而且缺陷的暴露依赖特定的访问交错，具有小概率的特点。以上原因导致人工走查的方式容易遗漏程序中的缺陷，因此，迫切需要研究多变量原子性违反自动化检测方法和工具，以更全面保证航天嵌入式软件的可信性。
2.	国内外研究现状
针对多变量原子性违反，国内外也开展了一些研究，并取得了一些成果，提出了各类的检测方法。虽然这些研究主要针对于多线程程序而不是中断驱动型程序，但其中的检测思想仍具有参考价值。这些研究根据每个检测方法思路的不同可以分为三类：定义访问序模式再匹配类、推断关联性再检测类、推断原子区再检测类。本节将根据后面的三类划分进行国内外研究现状综述。
1、定义访问序模式再匹配类
在单变量原子性违反检测中，根据变量访问序进行匹配是一种常用的方法。例如，陈睿等人[4]采用了基于抽象解释的方法来实现单个变量的访问序模式匹配。为检测多变量原子性违反而扩充单个变量的访问序至多个变量是一种直接的思路。相对于一个变量来说，多个变量的访问序模式更难刻画，好在先前的工作已给出了多变量的有问题的访问序模式，并且证明了这些模式的完备性。Vaziri等人[5]提出的方法就采用了该思路，他们列举了11种有问题的交错场景，并且证明了当一个程序不包含这11种交错时便不会发生原子性违反，以此说明这11种场景的完整性。但他们对访问序的刻画并不是唯一的，Park等人[6]提出的方法里列举了17种有问题的访问序模式，其中有3种是针对顺序违反的，除此之外，对多变量原子性违反的访问序比Vaziri的工作[5]多列举了3种，这主要是对Vaziri的11种作了扩展，将其中3种访问序模式细分为6种。而该类方法除了定义访问序模式之外，最关键的是如何检测程序中出现了定义的访问序。对于这个问题，Hammer等人[7]采取了基于自动机的方法进行匹配，每个自动机对应着一个访问序，当程序进行访问序中的访问时，自动机就接收这个访问，转入下一个状态，当程序完整进行了一种访问序模式中的全部访问时，对应的自动机也转入了最终的接受状态，意味着一个原子性违反缺陷的出现。Wang等人[8]则是采取了基于块的算法，此方法将事件和它的同步视为一组块，并定义了块与块之间发生原子性违反的情况，在程序运行时通过将每个块与其他块进行比较来检查原子性。
2、推断关联性再检测类
该类方法通过推断变量之间存在的关联性将多个变量抽象成单变量，再使用单变量原子性违反的检测器进行检测。现有的变量关联性推断方法有静态推断方法和动态推断方法，最先使用的是静态方法，它至今仍是该研究的热点。Lu等人[9]基于程序员们倾向于将对关联变量的访问放在一起，首先提出了使用源代码层级上的访问距离作为度量关联性的因素。该工作将离的近且一同出现的频率高的变量定为关联变量，采用数据挖掘的技术从程序中将它们提取出来。在检测时，不但要考虑本来的变量访问还要考虑与之关联的变量的访问。而Lucia等人[10]认为被一起分配内存空间的变量是具有关联性的，它们将这些具有关联性的变量赋予相同的颜色，之后检测颜色之间的交错是否违反了原子性。Jannesari等人[11]则认为具有控制依赖、数据依赖关系的变量是关联变量，该方法是一个动态方法，在执行过程中检测变量之间的依赖关系，并将具有依赖关系的变量放入一个关联集中，将操作它们的指令合并到一个计算单元中，并实时检测计算单元所持有的锁，若计算出一个计算单元不持有锁，则报告原子性违反。该方法显然只适用于使用锁集算法进行同步的程序。对于Sun等人[12]，他们使用了一种不被Lu等人[9]所看好的方法，即使用变量的动态距离作为衡量关联性的指标，Lu等人认为动态距离由于函数调用，循环等因素可能使得两个静态距离较近的变量有很长的一段动态距离，而Sun等人收集的程序执行轨迹里只包含对共享变量的访问，避免了由于其他因素造成动态距离过大的情况。随后在检测阶段利用模型检测的方法检测原子性违反。相比Lu等人的方法，胡敏[13]采用了一种不同的变量访问距离的定义方式：使用访问之间的方法跨度距离作为变量访问的距离度量方式。与Sun等人[12]的工作类似，这也是一种动态距离，是算法分析程序运行轨迹后计算出来的，使用这种动态距离可以避免程序通过调用函数访问关联变量造成变量之间的静态距离过大的问题。
3、推断原子区再检测类
该类方法均为动态方法，它们利用并发缺陷很少出现这一特点，先大量执行程序得到许多程序运行轨迹，再利用程序正常运行的运行轨迹逐步划定原子区，在检测阶段检测原子区是否有交错，若有则报告一个原子性违反缺陷。此方法最先由Lu等人[14]用于检测单变量原子性违反中，而Muzahid等人[15]发扬了此思想，提出了AtomTracker,它由两部分组成：自动推断原子区的AtomTracker-I和在运行时自动检测原子性违反的AtomTracker-D构成。AtomTracker-I需要大量的程序执行轨迹信息来生成原子区，它在每个轨迹文件中找到符合该轨迹的最大的原子区，随着处理的轨迹文件数量的增多，原子区可能会被细分，最后形成接近真实的原子区。在检测阶段，AtomTracker-D根据每条对同一个共享变量的访问判断两个原子区的先后顺序，若两原子区出现了矛盾的先后次序(检查原子区中某对指令得到先后次序不同于之前判断的先后次序)则报告一个原子性违反。Weeratunge等人[16]的方法则是收集成对变量的原子性信息，利用收集到的程序执行轨迹信息查看它们是否始终是原子性的，但该方法不能直接用来检测多变量原子性违反，它需要借助Lu等人[9]的工作提取出变量关联性信息，才可以检测多变量原子性违反。
4、国内外现状小结
国内外现有的研究已经取得了一些结果，但仍然存在着一些不足：
（1）现有的研究均面向多线程并发程序，但由于中断并发语义和多线程并发语义的不同，现有方法不能直接适用于中断并发程序。
（2）现有的定义访问序模式再匹配类方法由于未考虑变量之间的关联性，在检测时对所有变量都要进行检查，容易导致误报和造成额外性能开销；现有的推断关联性再检测类方法只从一个维度进行变量关联性的推断，而实际上变量关联性体现在多个维度上，只从一个维度出发容易导致遗漏；现有的推断原子区再检测类方法基于并发缺陷很少出现这一前提，实际运行程序，利用执行轨迹划定原子区。未考虑到这一步出现较多原子性违反的情况，可能造成划定出错误的原子区，进而对检测造成影响。
3.	研究目标及研究内容

3.1研究目标
针对没有检测多变量原子性违反自动化方法的问题，提出一种精确的中断驱动型嵌入式软件多变量原子性违反检测方法，并研发相应的原型工具、在真实的航天嵌入式软件上应用。更全面提升中断数据访问冲突的自动化检测能力，更进一步保障航天任务的顺利执行。本文的总体研究框架如图2所示。
 

图2 研究框架
3.2研究内容
继承现有检测方法思路，结合航天嵌入式软件中真实的多变量原子性违反特征，对基准测试集、自动化检测方法以及原型工具实现和评估开展研究。
1、多变量原子性违反基准测试集设计
收集真实的多变量原子性违反案例，对其缺陷特征进行精准刻画，分析在什么条件下变量具有关联性，例如同属一个结构体的成员变量之间、总是在一起被访问的变量之间。汇总变量具有关联性的全部情况，并且提炼实际造成多变量原子性违反的关联变量访问序，据此设计具有代表性、多样性的基准测试集。
2、自动化检测方法研究
在对多变量原子性违反特征研究的基础上，研究关联变量自动化推断方法。由于关联变量的表现形式多样，需要结合基准测试集上体现变量关联性的各个维度对关联变量进行多维度推断。在推断出变量关联性后，对多变量原子性违反自动化检测进行研究，结合目前中断驱动型程序并发缺陷检测方法的经验，研究适用于中断驱动型程序的多变量原子性违反检测方法。
3、原型工具研制和评估
在对自动化检测方法研究的基础上进行原型工具的研制，并在基准测试集上对工具的有效性进行评估。其中主要针对工具的关联变量推断精度、检测方法误报率以及性能进行重点评估。最终在真实的航天嵌入式软件中进行验证与应用。
4.	本文结构安排
本文章节安排如下：
第一章	绪论：介绍了本文的研究背景、国内外研究现状以及本文的研究目标和研究内容
第二章	相关概念及技术：介绍中断驱动程序和多变量原子性违反的基本概念，介绍程序静态分析中的相关技术和机器学习中的相关技术
第三章	基于机器学习的变量关联性检测方法研究：首先介绍变量关联性的概念，以及为什么要检测变量关联性，再阐述基于机器学习的检测方法，并对工具的设计和实现进行详细说明，最后进行实验评估
第四章	动静结合的多变量原子性违反检测方法研究：阐述使用动态和静态相结合的多变量原子性违反检测方法，详细说明工具的设计与实现，最后进行实验评估
第五章	总结与展望：总结本文的贡献，并说明本文工具存在的不足，以及对以后的研究工作进行展望









































第二章	相关概念及技术
2.1中断驱动型嵌入式软件相关概念
中断驱动型嵌入式软件，是一种基于中断机制实现并发处理和实时响应事件的软件。这类软件以其高效的资源使用和快速响应特性，在航空航天、汽车电子、医疗设备、工业控制、消费电子以及能源管理等领域有着广泛应用。
在现代计算机系统中，中断并发体系结构尤其适用于需要快速响应的嵌入式系统。这种体系结构之所以高效，是因为它允许系统在处理当前任务时快速切换并响应事件。它的核心在于中断处理流程：当中断请求发送至处理器，处理器会暂停当前任务，并保留任务状态。随后，执行与该中断相关的服务程序。一旦完成，系统恢复原任务，继续之前的流程。
此过程揭示了中断并发的几个关键特性，对于识别并发缺陷尤为重要：
中断的抢占时机不可预测性：这种不确定性要求系统能随时响应可能发生的中断。对于缺陷检测而言，这意味着检测工具需能识别随机中断可能引起的数据不一致问题。
中断并发的非对称抢占关系：中断可抢占主程序，而主程序则不能抢占中断。此外，高优先级的中断可抢占低优先级中断。这种中断嵌套加剧了系统行为的复杂性。
中断并发的无阻塞特性：与线程并发模型不同，中断并发不会被阻塞。程序员防止中断时，需通过设置中断使能寄存器来屏蔽中断，但这可能影响系统的实时性。因此，常采用标志量、双缓冲区等自定义并发控制机制。

2.2 多变量原子性违反缺陷
多变量原子性违反缺陷是一种并发缺陷，它与单变量的原子性违反比较类似，不同的是这种缺陷的原子区内包含的是多个变量，并且这些变量还是在语义上具有关联的。比如使用多个变量来共同描述一个物理量，当连续访问这些变量时，中断在访问操作之间抢占，并且中断处理程序中对这些变量也进行访问。这种情况会违反这种隐式的原子性，使得变量之间的语义一致性被打破。
2.3 机器学习相关概念与技术
2.4 软件缺陷检测相关技术
2.5 本章小结

